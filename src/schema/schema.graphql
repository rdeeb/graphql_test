type Tenant {
  id: ID!
  name: String!
}

type User {
  id: ID!
  email: String!
  tenant: Tenant
}

type TaskStatus {
  id: ID!
  name: String!
  isInitial: Boolean!
  toStatuses: [TaskStatus]
}

type Task {
  id: ID!
  name: String!
  description: String
  status: TaskStatus
  user: User
}

input CreateTaskInput {
  name: String!
  description: String
  userId: Int!
}

input UpdateTaskInput {
  name: String
  description: String
  statusId: Int
}

input LoginInput {
  email: String!
  password: String!
}

type LoginPayload {
  token: String!
  user: User!
}

type Query {
  getTasks: [Task]
  getStatuses: [TaskStatus]
}

type Mutation {
  createTask(input: CreateTaskInput!): Task
  updateTask(id: Int!, input: UpdateTaskInput!): Task
  login(input: LoginInput!): LoginPayload
}
